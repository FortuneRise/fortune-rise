name: CI/CD for Microservices

on:
  workflow_dispatch:  # Allows manual triggering from GitHub UI
  # Or use push or schedule if needed:
  # push:
  #   branches:
  #     - main
  # schedule:
  #   - cron: '0 0 * * *'  # Optional: Run every day at midnight UTC

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the code
      - name: Checkout code
        uses: actions/checkout@v2

  build_user:
    runs-on: ubuntu-latest
    needs: checkout
    steps:
      # 2. Build user microservice
      - name: Build user microservice
        run: |
          cd user-microservice
          mvn clean package

  build_wallet:
    runs-on: ubuntu-latest
    needs: build_user
    steps:
      # 3. Build wallet microservice
      - name: Build wallet microservice
        run: |
          cd wallet-microservice
          mvn clean package

  build_game:
    runs-on: ubuntu-latest
    needs: build_wallet
    steps:
      # 4. Build game microservice
      - name: Build game microservice
        run: |
          cd game-microservice
          mvn clean package

  build_notification:
    runs-on: ubuntu-latest
    needs: build_game
    steps:
      # 5. Build notification microservice
      - name: Build notification microservice
        run: |
          cd notification-microservice
          mvn clean package

  build_promotion:
    runs-on: ubuntu-latest
    needs: build_notification
    steps:
      # 6. Build promotion microservice
      - name: Build promotion microservice
        run: |
          cd promotion-microservice
          mvn clean package

  build_history:
    runs-on: ubuntu-latest
    needs: build_promotion
    steps:
      # 7. Build history microservice
      - name: Build history microservice
        run: |
          cd history-microservice
          mvn clean package

  docker_build:
    runs-on: ubuntu-latest
    needs: build_history
    steps:
      # 8. Execute the docker compose build
      - name: Execute docker compose build
        run: |
          docker-compose build

  docker_login:
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      # 9. Login to Docker Hub
      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: andhrib
          username: ${{ secrets.DOCKER_HUB_USERNAME }}  # Add these secrets in GitHub
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

  docker_push:
    runs-on: ubuntu-latest
    needs: docker_login
    steps:
      # 10. Push Docker images to Docker hub
      - name: Push Docker images
        run: |
          docker-compose push
